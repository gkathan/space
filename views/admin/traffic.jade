include ../kanban_menu

script(src='/javascripts/components/nvd3/build/nv.d3.min.js')
script(src='/javascripts/dashboards/nvd3_traffic.js')


style.
	#chartTraffic svg {
		height: 300px;
		width:750px;
	}
	#chartTrafficLocation svg {
		height: 200px;
		width:200px;
	}

block content

-	function bytesToSize(bytes) {
-		 var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
-		 if (bytes == 0) return '0 Byte';
-		 var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
-		 return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
-	}

div.panel(style=" position: relative;padding: 20px 40px 40px;display: block;background-color:white;width:900px;text-align: left;margin: 10px auto;")
	.panel-heading
		i.glyphicon.glyphicon-refresh(style="font-size:15px")
		span(style="font-size:20px") &nbsp;TRAFFIC for #{period}
		br
		|total hits: <b>#{totalHits}</b>
		div
			|unique clients: 
			b
				span(id="uniqClients")
		div
			|location distribution:
			b
				span(id="locationDistribution")
		div(id="chartTrafficLocation" style="text-align:center")
			svg
			
	.panel-body(style="font-size:12px")
		div(id="chartTraffic" style="text-align:center")
			svg
		
		
		table.table.table-striped.table-hover.table-condensed
			thead
				tr(style="line-height:24px")
					th(style="width:50px") 
						|date
					th(style="width:50px;")
						|hits
					th(style="width:50px;")
						|transfer IN
					th(style="width:50px;")
						|transfer OUT
			tbody
				each t in traffic
					tr
						td #{moment(year+"-"+month+"-"+t._id.day,"YYYY-MM-D").format("YYYY-MM-DD")}
						td #{t.hits}
						td #{bytesToSize(t.bytesReceived)}
						td #{bytesToSize(t.bytesSent)}
		br
		
		div(id="liveconsole")
		

include ../includes/material

script.
	var _year = "#{year}";
	var _month = "#{month}";
	
	
	
	$(function() {
		var loc = window.location;
		var livelist = $('#liveconsole');
		wsocket(loc, livelist);
	})
	
	var maxlines = 100;
	var pingtimer;
	var wsocket = function(loc, livelist) {
		
		sock = new WebSocket(((loc.protocol==='https:')?'wss:':'ws:')+'//ea.bwinparty.corp/nginxlive/io/livelogs');
		sock.onopen = function() {
				//console.log('open');
				pingtimer = setInterval(function() {
																sock.send('ping');
																}, 30000);
		};
		var _uniqRemoteAddr=[];
		
		sock.onmessage = function(e) {
				//console.log('message', e.data);
				var logline = JSON.parse(e.data);
				var logdate = new Date(logline.time);
				if (logline.host=="space.bwinparty.corp"){
					var line = logdate.toTimeString()+' '+logline.remoteAddr+' -'+logline.requestMethod+'-> '+logline.scheme+'://'+logline.host+logline.requestURI+' status: '+logline.status+' location: '+logline.location+' contentType: '+logline.contentType;
					$('<div class="logline '+((logline.status >= 300)?'bg-danger':'bg-success')+'" />').prependTo(livelist).html(line);
					livelist.find('.logline:gt('+maxlines+')').remove();
					if (_.indexOf(_uniqRemoteAddr,logline.remoteAddr)<0){
						_uniqRemoteAddr.push(logline.remoteAddr);
					}
					$('#uniqClients').text(_uniqRemoteAddr.length)
				}
		};
		sock.onclose = function() {
				//console.log('close');
				clearInterval(pingtimer);
				setTimeout(function () {
									 
				}, 2000);
		};
	};
