include ../kanban_menu

script(src="/javascripts/components/mousetrap/mousetrap.min.js")

script(src="/javascripts/components/interact/interact.min.js")


script(src="/javascripts/kanban/kanban_config.js")
script(src="/javascripts/kanban/kanban_core.js")
script(src="/javascripts/kanban/kanban_util.js")
script(src="/javascripts/kanban/kanban_grid.js")
script(src="/javascripts/kanban/kanban_lanes.js")
script(src="/javascripts/kanban/kanban_queues.js")
script(src="/javascripts/kanban/kanban_postits.js")

script(src="/javascripts/kanban/kanban_items.js")
script(src="/javascripts/kanban/kanban_metrics.js")
script(src="/javascripts/kanban/kanban.js")
script(src="/javascripts/kanban/kanban_vision.js")
script(src="/javascripts/kanban/kanban_events.js")
script(src="/javascripts/kanban/kanban_addons.js")

script(src="/javascripts/whiteboard/whiteboard.js")
script(src="/javascripts/wiki2html.js")
script(src="/javascripts/components/flippant.js/flippant.min.js")

block content
	div.notifications.top-left
	div.row(style="margin-left:10px;margin-bottom:10px")
		div.panel(style=" position: relative;padding: 20px 40px 40px;display: block;background-color:white;width:#{parseInt(board.width)+200}px;text-align: center;margin: 10px auto;")
			.panel-heading
				h3.panel-title(style="font-size:24px;font-weight:bold") #{board.name}
				span(style="font-size:10px") filtered by:
				span(id="filter_header" style="font-size:10px") #{JSON.stringify(board.filter)}
			.panel-body
				div.row(style="margin-left:10px;margin-bottom:10px")
					// Button trigger modal
					button.btn.btn-info.btn-xs(id="createnewboard" type="button" data-toggle="modal" data-target="#createBoardModal")
						span board update
					button.btn.btn-primary.btn-xs(type="button" data-toggle="modal" data-target="#myModal")
						span board config
					// Button trigger modal
					button.btn.btn-success.btn-xs(type="button" data-toggle="modal" data-target="#v1EpicsModal")
						span items (Swag and Value filled)
					// Button trigger whiteboard
					button.btn.btn-warning.btn-xs(type="button" onclick="renderWhiteboard()")
						span show backboard
					// Button trigger kanbanboard
					button.btn.btn-warning.btn-xs(type="button" onclick="hideWhiteboard();showKanbanboard()")
						span show kanban board

					div(id="board")
		
		//Modal
		div.modal.fade(id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" )
			div.modal-dialog
				div.modal-content(style="opacity:1")
					div.modal-header
						button.close(type="button" data-dismiss="modal" aria-label="Close")
							span(aria-hidden="true") &times
						h3.modal-title(id="myModalLabel")
							| admin menu .....
					div.modal-body
						//include includes/menu_metrics_multiselects.jade
						include includes/menu_visibility_switches.jade
						include includes/menu_svg_export.jade
						
					div.modal-footer
						button.btn.btn-default.btn-xs(type="button" data-dismiss="modal")
							span Close
						button.btn.btn-primary.btn-xs(type="button")
							span Save changes
		
		//v1EpicSelect Modal
		div.modal.fade(id="v1EpicsModal" tabindex="-1" role="dialog" aria-labelledby="v1EpicsModal" aria-hidden="true" )
			div.modal-dialog
				div.modal-content(style="opacity:1")
					div.modal-header
						button.close(type="button" data-dismiss="modal" aria-label="Close")
							span(aria-hidden="true") &times
						h4.modal-title(id="myModalLabel")
							
							|  roadmap items (Swag and Value fields filled)
					div.modal-body
						if epics
							table.table.table-striped.table-hover.table-condensed.tablsesorter(id="table_roadmapitems")
								thead
									tr
										th(style="width:80px") V1
										th name
										th product
										th(style="width:80px") start
										th(style="width:80px") end
										th value
										th(style="width:80px")  swag
										th(style="width:80px")  risk
								tbody
									each e in epics
										tr.draggable
											td(style="text-align:left;vertical-align:middle;font-size:10px") 
												img(src="/images/icons/epic.gif" height="10px")
												a(href="http://v1.bwinparty.corp/V1-Production/Epic.mvc/Summary?oidToken=Epic%3A"+e.ID.split(":")[1] target="_new" )
													|&nbsp;#{e.Number}
											td(style="vertical-align:top;text-align:left;vertical-align:middle;font-size:10px") 
												|#{e.Name}
											td(style="vertical-align:top;text-align:left;font-size:11px;vertical-align:middle") #{e.Product} 
											td(style="vertical-align:top;text-align:left;font-size:11px;vertical-align:middle") #{moment(e.PlannedStart).format('YYYY-MM-DD')} 
											td(style="vertical-align:top;text-align:left;font-size:11px;vertical-align:middle") #{moment(e.PlannedEnd).format('YYYY-MM-DD')} 
											td(style="vertical-align:top;text-align:left;font-size:11px;vertical-align:middle") #{e.Value} 
											td(style="vertical-align:top;text-align:left;vertical-align:middle;font-size:11px") #{e.Swag} 
											td(style="vertical-align:top;text-align:left;font-size:11px;vertical-align:middle") #{e.Risk} 
						script $("#table_roadmapitems").tablesorter();				
		
		//Modal
		div.modal.fade(id="createBoardModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"  )
			div.modal-dialog
				div.modal-content(style="opacity:1;width:800px")
					div.modal-header
						button.close(type="button" data-dismiss="modal" aria-label="Close")
							span(aria-hidden="true") &times
						table
							tr
								td(style="width:60px") 
									img.img-thumbnail(src="/images/boards/thumbs/#{board._id}.png"  style=" height:50px" )
								td 
									span(style="font-size:20px") #{formBoardTitle}
					div.modal-body(style="width:800px")
						include includes/form_board
									
include ../includes/material

	script(type="text/javascript").
		$("#boardsubmit").click(function() {console.log("create board submit pressed"); save(BOARD); });
		$("#boardsubmitnew").click(function() {console.log("create board submit new pressed"); save(BOARD,true); });
		$("#boardrefresh").click(function() {console.log("board REFRESH pressed"); refresh(BOARD); });

		$(document).keypress(function(e) {
			if(e.which == 13) {
					$("#boardrefresh").click();
			}
		});

		//var BOARD=!{JSON.stringify(board)};
		$("#boardrefresh").click(function() {console.log("board REFRESH pressed"); refresh(BOARD); });
		
		render("/images/svg/external.svg");
		// target elements with the "draggable" class
		interact('.draggable')
		  .draggable({
		    // enable inertial throwing
		    inertia: true,
		    // keep the element within the area of its parent
		    restrict: {
		      restriction: "parent",
		      endOnly: true,
		      elementRect: { top: 0, left: 0, bottom: 1, right: 1 }
		    },

		    // call this function on every dragmove event
		    onmove: dragMoveListener,
		    // call this function on every dragend event
		    onend: function (event) {
		      var textEl = event.target.querySelector('p');

		      textEl && (textEl.textContent =
		        'moved a distance of '
		        + (Math.sqrt(event.dx * event.dx +
		                     event.dy * event.dy)|0) + 'px');
		    }
		  });

		  function dragMoveListener (event) {
		    var target = event.target,
		        // keep the dragged position in the data-x/data-y attributes
		        x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
		        y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

		    //	 translate the element
		    target.style.webkitTransform =
		    target.style.transform =
		      'translate(' + x + 'px, ' + y + 'px)';

		    // update the posiion attributes
		    target.setAttribute('data-x', x);
		    target.setAttribute('data-y', y);
		  }

		  // this is used later in the resizing demo
		  window.dragMoveListener = dragMoveListener;
		
		
		
		
		function refresh(BOARD){
			console.log("...refresh ");
			_updateBoardFromFormData(BOARD);
			
			$('#filter_header').text(JSON.stringify(BOARD.filter));
			// restore original data from initial request
			initiativeData = initiativeDataBase;
			// and filter
			if (BOARD.filter.Targets){
				initiativeData = _.filter(initiativeData,function(i){if (_.findIndex(i.Targets,function(t){if (t.match(new RegExp(BOARD.filter.Targets))) return true;})>-1) return true; });
			}
			if (BOARD.filter.Customers){
				initiativeData = _.filter(initiativeData,function(i){if (_.findIndex(i.Customers,function(t){if (t.match(new RegExp(BOARD.filter.Customers))) return true;})>-1) return true; });
			}
			if (BOARD.filter.Markets){
				initiativeData = _.filter(initiativeData,function(i){if (_.findIndex(i.Markets,function(t){if (t.match(new RegExp(BOARD.filter.Markets))) return true;})>-1) return true; });
			}
			if (BOARD.filter.Product){
				initiativeData=_.where(initiativeData,{Product:BOARD.filter.Product})
			}
			if (BOARD.filter.Status){
				initiativeData=_.where(initiativeData,{Status:BOARD.filter.Status})
			}
			if (BOARD.filter.Value){
				initiativeData=_.filter(initiativeData,function(d){return d.Value>=BOARD.filter.Value});
			}
			renderBoard(BOARD,initiativeData);
		}

		/**
		* if clone is set we save as a new boards
		*/
		function save(BOARD,clone){
			
			console.log(".....saving current BOARD..");
			var _board =_.cloneDeep(BOARD);
			_board.items=[];
			_updateBoardFromFormData(_board);
			
			if (clone){
				console.log("OK we clone this board and thereby strip off the _.id attribute");
				_board = _.omit(_board,"_id");
				var _json = JSON.stringify(_board);
				var _url = "/api/space/rest/board";
				console.log("---- url = "+_url);
				//form.ajax call
				$.ajax({
					type: "POST",
					url: _url,
					data: { 'itemJson': _json},
					cache: false,
					dataType:"json",
					success: function(msg)
						{
							console.log("***** and now do a client side redirect: "+msg._id);
							reload(msg._id);
						},
					error: function(msg)
						{
							$('.top-left').notify({
									message: { html: "<span class=\"glyphicon glyphicon-fire\"></span><span style=\"font-size:10px;font-weight:bold\"> ajaxCall.("+_url+") says:</span> <br/><div style=\"font-size:10px;font-weight:normal;margin-left:20px\">"+JSON.stringify(msg)+"</div>" },
									fadeOut: {enabled:true,delay:2000},
									type: "danger"
								  }).show(); // for the ones that aren't closable and don't fade out there is a .hide() function.
						}
					});
			}
			else{
			var _list =[];
			_list.push(_board);
			ajaxCall("POST","save",_list,"boards",null,function(err,result){
				console.log("post result: "+result);
				reload(BOARD._id);
				});
			}			
		}
						
		function reload(id){
			window.location="/boards/kanban/"+id;
		}
		
		function _updateBoardFromFormData(BOARD){
			var _form = document.getElementById("form_board");
			
			BOARD.name=_form.name.value;
			BOARD.vision=_form.vision.value;
			BOARD.subvision=_form.subvision.value;
			BOARD.mission=_form.mission.value;
			
			BOARD.startDate=_form.startdate.value;
			BOARD.endDate=_form.enddate.value;
			BOARD.width=_form.width.value;
			_form.height.value=BOARD.height;
			BOARD.groupby=_form.groupby.value;
			
			BOARD.itemScale=_form.itemscale.value;
			BOARD.itemFontScale=_form.itemfontscale.value;
			
			BOARD.filter.Targets=_form.filter_Targets.value;
			BOARD.filter.Customers=_form.filter_Customers.value;
			BOARD.filter.Markets=_form.filter_Markets.value;
			BOARD.filter.Status=_form.filter_Status.value;
			BOARD.filter.Product=_form.filter_Product.value;
			BOARD.filter.Value=_form.filter_Value.value;
			
			
			BOARD.viewConfig.initiatives = _form.view_items.value;
			BOARD.viewConfig.swag = _form.view_swag.value;
			BOARD.viewConfig.start = _form.view_roadmap.value;
			BOARD.viewConfig.queues = _form.view_queues.value;
			BOARD.viewConfig.grid = _form.view_grid.value;
			BOARD.viewConfig.targets = _form.view_targets.value;
			BOARD.viewConfig.lanes = _form.view_lanes.value;
			BOARD.viewConfig.axes = _form.view_axes.value;
			BOARD.viewConfig.guides = _form.view_guides.value;
			BOARD.viewConfig.queuesmetrics = _form.view_qmetrics.value;
			BOARD.viewConfig.sublaneText = _form.view_sublaneText.value;
			BOARD.viewConfig.sublaneLine = _form.view_sublaneLine.value;
			BOARD.viewConfig.metrics = _form.view_metrics.value;
			
			
			//BOARD.dataLink=_form.datalink.value;
			//BOARD.ref=_form.ref.value;
		}
		
